{"version":3,"sources":["webpack:///dist/linear_regression/bgdVsgd/app.js","webpack:///webpack/bootstrap c5f360304b407c0b38f7","webpack:///./src/linear_regression/bgdVsgd/Main.es6","webpack:///./src/linear_regression/bgdVsgd/Regressor.es6"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_classCallCheck","instance","Constructor","TypeError","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","length","err","Array","isArray","_createClass","defineProperties","target","props","descriptor","writable","key","protoProps","staticProps","_Regressor","_Regressor2","obj","default","Main","_this3","this","_makeDatasets","makeDatasets","_makeDatasets2","rn1","m1","rn2","m2","$","window","gistAsync","r1","Math","round","random","r2","startY1","startY2","createWorkers","objectName","batchNum","costHistory","Highcharts","Chart","chart","renderTo","title","text","yAxis","plotLines","width","color","legend","layout","align","verticalAlign","borderWidth","series","data","lineWidth","type","marker","enabled","plotOptions","animation","lineData","charts","remove","addSeries","id","num","measurements","workerTypes","realNumbers","startYs","_this","workers","radius","w","Worker","onmessage","e","receivedWorkerMessage","postMessage","action","workerType","startY","drawLine","html","epocNum","drawCost","_this2","apply","NUM_POINTS","map","item","index","realEq1","realEq2","min","RANDOM_ALPHA","max","Regressor","rn","real_numbers","object_name","epocPost","setup","y","b","epoch","training_examples","x","points","error","pow","line","ni","getLineData","a","LEARNING_RATE","bestB","bestM","bestC","Infinity","timer","hc","pc","TIME_INTERVAL","MAX_ITERATION","PRECISION"],"mappings":"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","file":"./dist/linear_regression/bgdVsgd/app.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Regressor = __webpack_require__(1);\n\nvar _Regressor2 = _interopRequireDefault(_Regressor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Main = function () {\n    _createClass(Main, [{\n        key: 'drawCost',\n        value: function drawCost(objectName, batchNum, costHistory) {\n            new Highcharts.Chart({\n                chart: {\n                    renderTo: 'hc_container_error' + batchNum\n                },\n                title: {\n                    text: objectName + \"GD Cost Regression #\" + (batchNum + 1)\n                },\n                yAxis: {\n                    plotLines: [{\n                        value: 0,\n                        width: 1,\n                        color: '#808080'\n                    }]\n                },\n                legend: {\n                    layout: 'vertical',\n                    align: 'right',\n                    verticalAlign: 'middle',\n                    borderWidth: 0\n                },\n                series: [{\n                    name: 'Cost',\n                    data: costHistory,\n                    lineWidth: 1,\n                    type: 'spline',\n                    color: 'palevioletred',\n                    marker: {\n                        enabled: false\n                    }\n                }],\n                plotOptions: {\n                    series: {\n                        animation: false\n                    }\n                }\n            });\n        }\n    }, {\n        key: 'drawLine',\n        value: function drawLine(batchNum, lineData) {\n            var series = this.charts[batchNum].get('regression_line');\n            if (series) {\n                series.remove();\n            }\n            this.charts[batchNum].addSeries({\n                name: 'Regression Line',\n                id: 'regression_line',\n                data: lineData,\n                lineWidth: 1,\n                type: \"spline\",\n                color: 'steelblue',\n                marker: {\n                    enabled: false\n                }\n            });\n        }\n    }, {\n        key: 'createWorkers',\n        value: function createWorkers(num, measurements, workerTypes, realNumbers, startYs) {\n            var _this = this;\n\n            this.charts = [];\n            this.workers = [];\n            for (var i = 0; i < num; i++) {\n                this.charts.push(new Highcharts.Chart({\n                    chart: {\n                        renderTo: 'hc_container' + i\n                    },\n                    title: {\n                        text: ''\n                    },\n                    yAxis: {\n                        plotLines: [{\n                            value: 0,\n                            width: 1,\n                            color: '#808080'\n                        }]\n                    },\n                    legend: {\n                        layout: 'vertical',\n                        align: 'right',\n                        verticalAlign: 'middle',\n                        borderWidth: 0\n                    },\n                    series: [{\n                        name: 'Measurement',\n                        data: measurements[i],\n                        lineWidth: 0,\n                        type: 'spline',\n                        color: 'palevioletred',\n                        marker: {\n                            enabled: true,\n                            radius: 3\n                        }\n                    }],\n                    plotOptions: {\n                        series: {\n                            animation: false\n                        }\n                    }\n                }));\n                var w = new Worker(\"Worker.js\");\n                w.onmessage = function (e) {\n                    _this.receivedWorkerMessage(e);\n                };\n                w.postMessage({\n                    action: 'SET_WORKER_VARS',\n                    batchNum: i,\n                    workerType: workerTypes[i],\n                    measurements: measurements[i],\n                    realNumbers: realNumbers[i],\n                    startY: startYs[i]\n                });\n                this.workers.push(w);\n            }\n        }\n    }, {\n        key: 'receivedWorkerMessage',\n        value: function receivedWorkerMessage(e) {\n            switch (e.data.action) {\n                case 'DRAW_LINE':\n                    this.drawLine(e.data.batchNum, e.data.lineData);\n                    $(\"#epoc_number\" + e.data.batchNum).html(\"Epocs: \" + e.data.epocNum);\n                    break;\n\n                case 'DRAW_COST':\n                    this.drawCost(e.data.objectName, e.data.batchNum, e.data.costHistory);\n                    $(\"#epoc_number\" + e.data.batchNum).html(\"Convergence in <b>\" + e.data.epocNum + \"</b> epocs!\");\n                    break;\n            }\n        }\n    }, {\n        key: 'realEq1',\n        value: function realEq1(i) {\n            return i;\n        }\n    }, {\n        key: 'realEq2',\n        value: function realEq2(i) {\n            return 50;\n        }\n    }, {\n        key: 'makeDatasets',\n        value: function makeDatasets() {\n            var _this2 = this;\n\n            var rn1 = Array.apply(null, { length: _Regressor2.default.NUM_POINTS }).map(function (item, index) {\n                return _this2.realEq1(index);\n            });\n\n            var rn2 = Array.apply(null, { length: _Regressor2.default.NUM_POINTS }).map(function (item, index) {\n                return _this2.realEq2(index);\n            });\n\n            var m1 = rn1.map(function (item, i) {\n                var min = item - item * _Regressor2.default.RANDOM_ALPHA;\n                var max = item + item * _Regressor2.default.RANDOM_ALPHA;\n                return Math.random() * (max - min) + min;\n            });\n\n            var m2 = rn2.map(function (item, i) {\n                var min = item - item * _Regressor2.default.RANDOM_ALPHA;\n                var max = item + item * _Regressor2.default.RANDOM_ALPHA;\n                return Math.random() * (max - min) + min;\n            });\n\n            return [rn1, m1, rn2, m2];\n        }\n    }]);\n\n    function Main() {\n        var _this3 = this;\n\n        _classCallCheck(this, Main);\n\n        var _makeDatasets = this.makeDatasets(),\n            _makeDatasets2 = _slicedToArray(_makeDatasets, 4),\n            rn1 = _makeDatasets2[0],\n            m1 = _makeDatasets2[1],\n            rn2 = _makeDatasets2[2],\n            m2 = _makeDatasets2[3];\n\n        $(function () {\n            window.gistAsync();\n            var r1 = Math.round(Math.random() * (m1.length - 1));\n            var r2 = Math.round(Math.random() * (m2.length - 1));\n            var startY1 = m1[r1];\n            var startY2 = m2[r2];\n            _this3.createWorkers(4, [m1, m2, m1, m2], [\"BATCH\", \"BATCH\", \"STOCHASTIC\", \"STOCHASTIC\"], [rn1, rn2, rn1, rn2], [startY1, startY2, startY1, startY2]);\n        });\n    }\n\n    return Main;\n}();\n\nnew Main();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Regressor = function () {\n    function Regressor(rn, m, batchNum, objectName) {\n        _classCallCheck(this, Regressor);\n\n        this.real_numbers = rn;\n        this.measurements = m;\n        this.batchNum = batchNum;\n        this.object_name = objectName;\n        this.costHistory = [];\n        this.epocPost = 0;\n        this.setup();\n    }\n\n    _createClass(Regressor, [{\n        key: 'start',\n        value: function start(y) {\n            this.b = y;\n            this.epoch(this.training_examples);\n        }\n    }, {\n        key: 'line',\n        value: function line(x) {\n            return this.b + this.m * x;\n        }\n    }, {\n        key: 'cost',\n        value: function cost(points) {\n            var error = 0,\n                i = void 0,\n                x = void 0,\n                y = void 0;\n            for (i = 0; i < points.length; i++) {\n                x = points[i][0];\n                y = points[i][1];\n                error += Math.pow(y - this.line(x), 2);\n            }\n            return error / points.length;\n        }\n    }, {\n        key: 'getLineData',\n        value: function getLineData() {\n            var _this = this;\n\n            return this.real_numbers.map(function (n, i) {\n                return _this.line(i);\n            });\n        }\n    }, {\n        key: 'drawCost',\n        value: function drawCost() {\n            postMessage({\n                action: 'DRAW_COST',\n                objectName: this.object_name,\n                batchNum: this.batchNum,\n                costHistory: this.costHistory,\n                epocNum: this.ni\n            });\n        }\n    }, {\n        key: 'drawLine',\n        value: function drawLine() {\n            if (this.epocPost % 10 == 0) {\n                var lineData = this.getLineData();\n\n                postMessage({\n                    action: 'DRAW_LINE',\n                    lineData: lineData,\n                    batchNum: this.batchNum,\n                    epocNum: this.ni\n                });\n            }\n            this.epocPost++;\n        }\n    }, {\n        key: 'setup',\n        value: function setup() {\n            /**\n             * Training examples is the [x, y] pairs that will be used for training\n             */\n            this.training_examples = this.measurements.map(function (n, i) {\n                return [i, n];\n            });\n            /**\n             * Number of iterations\n             * @type {number}\n             */\n            this.ni = 0;\n            /**\n             * Current Cost\n             * @type {number}\n             */\n            this.c = 0;\n            /**\n             * Alpha - Learning rate\n             * @type {number}\n             */\n            this.a = Regressor.LEARNING_RATE;\n            /**\n             * Best B - after convergence we choose the best B value\n             * @type {number}\n             */\n            this.bestB = 0;\n            /**\n             * Bese M - after convergence we choose the best M value\n             * @type {number}\n             */\n            this.bestM = 0;\n            /**\n             * Best Cost - keep track of the best cost we have reached so far\n             * @type {Number}\n             */\n            this.bestC = Infinity;\n            /**\n             * The slope\n             * @type {number}\n             */\n            this.m = 0;\n            /**\n             * The timer\n             * @type {null}\n             */\n            this.timer = null;\n            /**\n             * The HighCharts reference\n             * @type {Highcharts.Chart}\n             */\n            this.hc = null;\n            /**\n             * Previous cost, used for measuring precision\n             * @type {Number}\n             */\n            this.pc = Infinity;\n        }\n    }]);\n\n    return Regressor;\n}();\n\nRegressor.NUM_POINTS = 50;\nRegressor.TIME_INTERVAL = 10;\nRegressor.RANDOM_ALPHA = .5;\nRegressor.LEARNING_RATE = 0.001;\nRegressor.MAX_ITERATION = 1000;\nRegressor.PRECISION = 0.001;\nexports.default = Regressor;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9saW5lYXJfcmVncmVzc2lvbi9iZ2RWc2dkL1JlZ3Jlc3Nvci5lczYiXSwibmFtZXMiOlsiUmVncmVzc29yIiwicm4iLCJtIiwiYmF0Y2hOdW0iLCJvYmplY3ROYW1lIiwicmVhbF9udW1iZXJzIiwibWVhc3VyZW1lbnRzIiwib2JqZWN0X25hbWUiLCJjb3N0SGlzdG9yeSIsImVwb2NQb3N0Iiwic2V0dXAiLCJ5IiwiYiIsImVwb2NoIiwidHJhaW5pbmdfZXhhbXBsZXMiLCJ4IiwicG9pbnRzIiwiZXJyb3IiLCJpIiwibGVuZ3RoIiwiTWF0aCIsInBvdyIsImxpbmUiLCJtYXAiLCJuIiwicG9zdE1lc3NhZ2UiLCJhY3Rpb24iLCJlcG9jTnVtIiwibmkiLCJsaW5lRGF0YSIsImdldExpbmVEYXRhIiwiYyIsImEiLCJMRUFSTklOR19SQVRFIiwiYmVzdEIiLCJiZXN0TSIsImJlc3RDIiwiSW5maW5pdHkiLCJ0aW1lciIsImhjIiwicGMiLCJOVU1fUE9JTlRTIiwiVElNRV9JTlRFUlZBTCIsIlJBTkRPTV9BTFBIQSIsIk1BWF9JVEVSQVRJT04iLCJQUkVDSVNJT04iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7SUFBTUEsUztBQVVGLHVCQUFZQyxFQUFaLEVBQWdCQyxDQUFoQixFQUFtQkMsUUFBbkIsRUFBNkJDLFVBQTdCLEVBQXdDO0FBQUE7O0FBQ3BDLGFBQUtDLFlBQUwsR0FBb0JKLEVBQXBCO0FBQ0EsYUFBS0ssWUFBTCxHQUFvQkosQ0FBcEI7QUFDQSxhQUFLQyxRQUFMLEdBQWdCQSxRQUFoQjtBQUNBLGFBQUtJLFdBQUwsR0FBbUJILFVBQW5CO0FBQ0EsYUFBS0ksV0FBTCxHQUFtQixFQUFuQjtBQUNBLGFBQUtDLFFBQUwsR0FBZ0IsQ0FBaEI7QUFDQSxhQUFLQyxLQUFMO0FBQ0g7Ozs7OEJBRUtDLEMsRUFBRTtBQUNKLGlCQUFLQyxDQUFMLEdBQVNELENBQVQ7QUFDQSxpQkFBS0UsS0FBTCxDQUFXLEtBQUtDLGlCQUFoQjtBQUNIOzs7NkJBRUlDLEMsRUFBRTtBQUNILG1CQUFPLEtBQUtILENBQUwsR0FBUyxLQUFLVixDQUFMLEdBQVNhLENBQXpCO0FBQ0g7Ozs2QkFFSUMsTSxFQUFRO0FBQ1QsZ0JBQUlDLFFBQVEsQ0FBWjtBQUFBLGdCQUFlQyxVQUFmO0FBQUEsZ0JBQWtCSCxVQUFsQjtBQUFBLGdCQUFxQkosVUFBckI7QUFDQSxpQkFBS08sSUFBSSxDQUFULEVBQVlBLElBQUlGLE9BQU9HLE1BQXZCLEVBQStCRCxHQUEvQixFQUFvQztBQUNoQ0gsb0JBQUlDLE9BQU9FLENBQVAsRUFBVSxDQUFWLENBQUo7QUFDQVAsb0JBQUlLLE9BQU9FLENBQVAsRUFBVSxDQUFWLENBQUo7QUFDQUQseUJBQVNHLEtBQUtDLEdBQUwsQ0FBVVYsSUFBSSxLQUFLVyxJQUFMLENBQVVQLENBQVYsQ0FBZCxFQUE2QixDQUE3QixDQUFUO0FBQ0g7QUFDRCxtQkFBT0UsUUFBUUQsT0FBT0csTUFBdEI7QUFDSDs7O3NDQUVZO0FBQUE7O0FBQ1QsbUJBQU8sS0FBS2QsWUFBTCxDQUFrQmtCLEdBQWxCLENBQXNCLFVBQUNDLENBQUQsRUFBSU4sQ0FBSixFQUFVO0FBQ25DLHVCQUFPLE1BQUtJLElBQUwsQ0FBVUosQ0FBVixDQUFQO0FBQ0gsYUFGTSxDQUFQO0FBR0g7OzttQ0FFUztBQUNOTyx3QkFBWTtBQUNSQyx3QkFBUSxXQURBO0FBRVJ0Qiw0QkFBWSxLQUFLRyxXQUZUO0FBR1JKLDBCQUFVLEtBQUtBLFFBSFA7QUFJUkssNkJBQWEsS0FBS0EsV0FKVjtBQUtSbUIseUJBQVMsS0FBS0M7QUFMTixhQUFaO0FBT0g7OzttQ0FFUztBQUNOLGdCQUFHLEtBQUtuQixRQUFMLEdBQWdCLEVBQWhCLElBQXNCLENBQXpCLEVBQTRCO0FBQ3hCLG9CQUFNb0IsV0FBVyxLQUFLQyxXQUFMLEVBQWpCOztBQUVBTCw0QkFBWTtBQUNSQyw0QkFBUSxXQURBO0FBRVJHLDhCQUFVQSxRQUZGO0FBR1IxQiw4QkFBVSxLQUFLQSxRQUhQO0FBSVJ3Qiw2QkFBUyxLQUFLQztBQUpOLGlCQUFaO0FBTUg7QUFDRCxpQkFBS25CLFFBQUw7QUFDSDs7O2dDQUVNO0FBQ0g7OztBQUdBLGlCQUFLSyxpQkFBTCxHQUF5QixLQUFLUixZQUFMLENBQ3BCaUIsR0FEb0IsQ0FDaEIsVUFBQ0MsQ0FBRCxFQUFJTixDQUFKLEVBQVU7QUFDWCx1QkFBTyxDQUFDQSxDQUFELEVBQUlNLENBQUosQ0FBUDtBQUNILGFBSG9CLENBQXpCO0FBSUE7Ozs7QUFJQSxpQkFBS0ksRUFBTCxHQUFVLENBQVY7QUFDQTs7OztBQUlBLGlCQUFLRyxDQUFMLEdBQVMsQ0FBVDtBQUNBOzs7O0FBSUEsaUJBQUtDLENBQUwsR0FBU2hDLFVBQVVpQyxhQUFuQjtBQUNBOzs7O0FBSUEsaUJBQUtDLEtBQUwsR0FBYSxDQUFiO0FBQ0E7Ozs7QUFJQSxpQkFBS0MsS0FBTCxHQUFhLENBQWI7QUFDQTs7OztBQUlBLGlCQUFLQyxLQUFMLEdBQWFDLFFBQWI7QUFDQTs7OztBQUlBLGlCQUFLbkMsQ0FBTCxHQUFTLENBQVQ7QUFDQTs7OztBQUlBLGlCQUFLb0MsS0FBTCxHQUFhLElBQWI7QUFDQTs7OztBQUlBLGlCQUFLQyxFQUFMLEdBQVUsSUFBVjtBQUNBOzs7O0FBSUEsaUJBQUtDLEVBQUwsR0FBVUgsUUFBVjtBQUNIOzs7Ozs7QUEvSENyQyxTLENBR0t5QyxVLEdBQWEsRTtBQUhsQnpDLFMsQ0FJSzBDLGEsR0FBZ0IsRTtBQUpyQjFDLFMsQ0FLSzJDLFksR0FBZSxFO0FBTHBCM0MsUyxDQU1LaUMsYSxHQUFnQixLO0FBTnJCakMsUyxDQU9LNEMsYSxHQUFnQixJO0FBUHJCNUMsUyxDQVFLNkMsUyxHQUFZLEs7a0JBMEhSN0MsUyIsImZpbGUiOiJSZWdyZXNzb3IuZXM2Iiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yaWNod2FuZGVsbC9QaHBzdG9ybVByb2plY3RzL2pzYWxnb3MiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBSZWdyZXNzb3J7XG5cblxuICAgIHN0YXRpYyBOVU1fUE9JTlRTID0gNTA7XG4gICAgc3RhdGljIFRJTUVfSU5URVJWQUwgPSAxMDtcbiAgICBzdGF0aWMgUkFORE9NX0FMUEhBID0gLjU7XG4gICAgc3RhdGljIExFQVJOSU5HX1JBVEUgPSAwLjAwMTtcbiAgICBzdGF0aWMgTUFYX0lURVJBVElPTiA9IDEwMDA7XG4gICAgc3RhdGljIFBSRUNJU0lPTiA9IDAuMDAxO1xuXG4gICAgY29uc3RydWN0b3Iocm4sIG0sIGJhdGNoTnVtLCBvYmplY3ROYW1lKXtcbiAgICAgICAgdGhpcy5yZWFsX251bWJlcnMgPSBybjtcbiAgICAgICAgdGhpcy5tZWFzdXJlbWVudHMgPSBtO1xuICAgICAgICB0aGlzLmJhdGNoTnVtID0gYmF0Y2hOdW07XG4gICAgICAgIHRoaXMub2JqZWN0X25hbWUgPSBvYmplY3ROYW1lO1xuICAgICAgICB0aGlzLmNvc3RIaXN0b3J5ID0gW107XG4gICAgICAgIHRoaXMuZXBvY1Bvc3QgPSAwO1xuICAgICAgICB0aGlzLnNldHVwKCk7XG4gICAgfVxuXG4gICAgc3RhcnQoeSl7XG4gICAgICAgIHRoaXMuYiA9IHk7XG4gICAgICAgIHRoaXMuZXBvY2godGhpcy50cmFpbmluZ19leGFtcGxlcyk7XG4gICAgfVxuXG4gICAgbGluZSh4KXtcbiAgICAgICAgcmV0dXJuIHRoaXMuYiArIHRoaXMubSAqIHg7XG4gICAgfVxuXG4gICAgY29zdChwb2ludHMpIHtcbiAgICAgICAgbGV0IGVycm9yID0gMCwgaSwgeCwgeTtcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IHBvaW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgeCA9IHBvaW50c1tpXVswXTtcbiAgICAgICAgICAgIHkgPSBwb2ludHNbaV1bMV07XG4gICAgICAgICAgICBlcnJvciArPSBNYXRoLnBvdygoeSAtIHRoaXMubGluZSh4KSksIDIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlcnJvciAvIHBvaW50cy5sZW5ndGg7XG4gICAgfVxuXG4gICAgZ2V0TGluZURhdGEoKXtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVhbF9udW1iZXJzLm1hcCgobiwgaSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubGluZShpKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZHJhd0Nvc3QoKXtcbiAgICAgICAgcG9zdE1lc3NhZ2Uoe1xuICAgICAgICAgICAgYWN0aW9uOiAnRFJBV19DT1NUJyxcbiAgICAgICAgICAgIG9iamVjdE5hbWU6IHRoaXMub2JqZWN0X25hbWUsXG4gICAgICAgICAgICBiYXRjaE51bTogdGhpcy5iYXRjaE51bSxcbiAgICAgICAgICAgIGNvc3RIaXN0b3J5OiB0aGlzLmNvc3RIaXN0b3J5LFxuICAgICAgICAgICAgZXBvY051bTogdGhpcy5uaVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBkcmF3TGluZSgpe1xuICAgICAgICBpZih0aGlzLmVwb2NQb3N0ICUgMTAgPT0gMCkge1xuICAgICAgICAgICAgY29uc3QgbGluZURhdGEgPSB0aGlzLmdldExpbmVEYXRhKCk7XG5cbiAgICAgICAgICAgIHBvc3RNZXNzYWdlKHtcbiAgICAgICAgICAgICAgICBhY3Rpb246ICdEUkFXX0xJTkUnLFxuICAgICAgICAgICAgICAgIGxpbmVEYXRhOiBsaW5lRGF0YSxcbiAgICAgICAgICAgICAgICBiYXRjaE51bTogdGhpcy5iYXRjaE51bSxcbiAgICAgICAgICAgICAgICBlcG9jTnVtOiB0aGlzLm5pXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmVwb2NQb3N0Kys7XG4gICAgfVxuXG4gICAgc2V0dXAoKXtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRyYWluaW5nIGV4YW1wbGVzIGlzIHRoZSBbeCwgeV0gcGFpcnMgdGhhdCB3aWxsIGJlIHVzZWQgZm9yIHRyYWluaW5nXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnRyYWluaW5nX2V4YW1wbGVzID0gdGhpcy5tZWFzdXJlbWVudHNcbiAgICAgICAgICAgIC5tYXAoKG4sIGkpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gW2ksIG5dO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBOdW1iZXIgb2YgaXRlcmF0aW9uc1xuICAgICAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5uaSA9IDA7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBDdXJyZW50IENvc3RcbiAgICAgICAgICogQHR5cGUge251bWJlcn1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuYyA9IDA7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBBbHBoYSAtIExlYXJuaW5nIHJhdGVcbiAgICAgICAgICogQHR5cGUge251bWJlcn1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuYSA9IFJlZ3Jlc3Nvci5MRUFSTklOR19SQVRFO1xuICAgICAgICAvKipcbiAgICAgICAgICogQmVzdCBCIC0gYWZ0ZXIgY29udmVyZ2VuY2Ugd2UgY2hvb3NlIHRoZSBiZXN0IEIgdmFsdWVcbiAgICAgICAgICogQHR5cGUge251bWJlcn1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuYmVzdEIgPSAwO1xuICAgICAgICAvKipcbiAgICAgICAgICogQmVzZSBNIC0gYWZ0ZXIgY29udmVyZ2VuY2Ugd2UgY2hvb3NlIHRoZSBiZXN0IE0gdmFsdWVcbiAgICAgICAgICogQHR5cGUge251bWJlcn1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuYmVzdE0gPSAwO1xuICAgICAgICAvKipcbiAgICAgICAgICogQmVzdCBDb3N0IC0ga2VlcCB0cmFjayBvZiB0aGUgYmVzdCBjb3N0IHdlIGhhdmUgcmVhY2hlZCBzbyBmYXJcbiAgICAgICAgICogQHR5cGUge051bWJlcn1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuYmVzdEMgPSBJbmZpbml0eTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBzbG9wZVxuICAgICAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5tID0gMDtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSB0aW1lclxuICAgICAgICAgKiBAdHlwZSB7bnVsbH1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMudGltZXIgPSBudWxsO1xuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIEhpZ2hDaGFydHMgcmVmZXJlbmNlXG4gICAgICAgICAqIEB0eXBlIHtIaWdoY2hhcnRzLkNoYXJ0fVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5oYyA9IG51bGw7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBQcmV2aW91cyBjb3N0LCB1c2VkIGZvciBtZWFzdXJpbmcgcHJlY2lzaW9uXG4gICAgICAgICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnBjID0gSW5maW5pdHk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBSZWdyZXNzb3I7Il19\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(0);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// dist/linear_regression/bgdVsgd/app.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c5f360304b407c0b38f7","import Regressor from './Regressor';\n\nclass Main{\n\n    drawCost(objectName, batchNum, costHistory){\n        new Highcharts.Chart({\n            chart:{\n                renderTo: 'hc_container_error' + batchNum\n            },\n            title: {\n                text: objectName + \"GD Cost Regression #\" + (batchNum + 1)\n            },\n            yAxis: {\n                plotLines: [{\n                    value: 0,\n                    width: 1,\n                    color: '#808080'\n                }]\n            },\n            legend: {\n                layout: 'vertical',\n                align: 'right',\n                verticalAlign: 'middle',\n                borderWidth: 0\n            },\n            series: [{\n                name: 'Cost',\n                data: costHistory,\n                lineWidth : 1,\n                type: 'spline',\n                color: 'palevioletred',\n                marker : {\n                    enabled : false\n                }\n            }],\n            plotOptions:{\n                series: {\n                    animation: false\n                }\n            }\n        });\n    }\n\n    drawLine(batchNum, lineData){\n        let series = this.charts[batchNum].get('regression_line');\n        if(series){\n            series.remove();\n        }\n        this.charts[batchNum].addSeries({\n            name: 'Regression Line',\n            id: 'regression_line',\n            data: lineData,\n            lineWidth: 1,\n            type: \"spline\",\n            color: 'steelblue',\n            marker: {\n                enabled: false\n            }\n        });\n    }\n\n    createWorkers(num, measurements, workerTypes, realNumbers, startYs){\n        this.charts = [];\n        this.workers = [];\n        for(let i = 0; i < num; i++) {\n            this.charts.push(new Highcharts.Chart({\n                chart: {\n                    renderTo: 'hc_container' + i\n                },\n                title: {\n                    text: ''\n                },\n                yAxis: {\n                    plotLines: [{\n                        value: 0,\n                        width: 1,\n                        color: '#808080'\n                    }]\n                },\n                legend: {\n                    layout: 'vertical',\n                    align: 'right',\n                    verticalAlign: 'middle',\n                    borderWidth: 0\n                },\n                series: [{\n                    name: 'Measurement',\n                    data: measurements[i],\n                    lineWidth: 0,\n                    type: 'spline',\n                    color: 'palevioletred',\n                    marker: {\n                        enabled: true,\n                        radius: 3\n                    }\n                }],\n                plotOptions: {\n                    series: {\n                        animation: false\n                    }\n                }\n            }));\n            let w = new Worker(\"Worker.js\");\n            w.onmessage = (e) => {\n                this.receivedWorkerMessage(e);\n            };\n            w.postMessage({\n                action: 'SET_WORKER_VARS',\n                batchNum: i,\n                workerType: workerTypes[i],\n                measurements: measurements[i],\n                realNumbers: realNumbers[i],\n                startY: startYs[i]\n            });\n            this.workers.push(w);\n        }\n    }\n\n    receivedWorkerMessage(e){\n        switch(e.data.action){\n            case 'DRAW_LINE':\n                this.drawLine(e.data.batchNum, e.data.lineData);\n                $(\"#epoc_number\" + e.data.batchNum).html(\"Epocs: \" + e.data.epocNum);\n                break;\n\n            case 'DRAW_COST':\n                this.drawCost(e.data.objectName, e.data.batchNum, e.data.costHistory);\n                $(\"#epoc_number\" + e.data.batchNum).html(\"Convergence in <b>\" + e.data.epocNum + \"</b> epocs!\");\n                break;\n        }\n    }\n\n    realEq1(i){\n        return i;\n    }\n\n    realEq2(i){\n        return 50;\n    }\n\n    makeDatasets(){\n        const rn1 = Array.apply(null, {length: Regressor.NUM_POINTS})\n            .map( (item, index) => {\n                return this.realEq1(index);\n            });\n\n        const rn2 = Array.apply(null, {length: Regressor.NUM_POINTS})\n            .map( (item, index) => {\n                return this.realEq2(index);\n            });\n\n        const m1 = rn1\n            .map(function (item, i) {\n                let min = item - item * Regressor.RANDOM_ALPHA;\n                let max = item + item * Regressor.RANDOM_ALPHA;\n                return Math.random() * (max - min) + min;\n            });\n\n        const m2 = rn2\n            .map(function (item, i) {\n                let min = item - item * Regressor.RANDOM_ALPHA;\n                let max = item + item * Regressor.RANDOM_ALPHA;\n                return Math.random() * (max - min) + min;\n            });\n\n        return [rn1, m1, rn2, m2];\n    }\n\n    constructor(){\n        const [rn1, m1, rn2, m2] = this.makeDatasets();\n\n        $(() => {\n            window.gistAsync();\n            const r1 = Math.round(Math.random() * (m1.length - 1));\n            const r2 = Math.round(Math.random() * (m2.length - 1));\n            const startY1 = m1[r1];\n            const startY2 = m2[r2];\n            this.createWorkers(4,\n                [m1, m2, m1, m2],\n                [\"BATCH\", \"BATCH\", \"STOCHASTIC\", \"STOCHASTIC\"],\n                [rn1, rn2, rn1, rn2],\n                [startY1, startY2, startY1, startY2]\n            );\n        });\n    }\n}\n\nnew Main();\n\n\n// WEBPACK FOOTER //\n// ./src/linear_regression/bgdVsgd/Main.es6","class Regressor{\n\n\n    static NUM_POINTS = 50;\n    static TIME_INTERVAL = 10;\n    static RANDOM_ALPHA = .5;\n    static LEARNING_RATE = 0.001;\n    static MAX_ITERATION = 1000;\n    static PRECISION = 0.001;\n\n    constructor(rn, m, batchNum, objectName){\n        this.real_numbers = rn;\n        this.measurements = m;\n        this.batchNum = batchNum;\n        this.object_name = objectName;\n        this.costHistory = [];\n        this.epocPost = 0;\n        this.setup();\n    }\n\n    start(y){\n        this.b = y;\n        this.epoch(this.training_examples);\n    }\n\n    line(x){\n        return this.b + this.m * x;\n    }\n\n    cost(points) {\n        let error = 0, i, x, y;\n        for (i = 0; i < points.length; i++) {\n            x = points[i][0];\n            y = points[i][1];\n            error += Math.pow((y - this.line(x)), 2);\n        }\n        return error / points.length;\n    }\n\n    getLineData(){\n        return this.real_numbers.map((n, i) => {\n            return this.line(i);\n        });\n    }\n\n    drawCost(){\n        postMessage({\n            action: 'DRAW_COST',\n            objectName: this.object_name,\n            batchNum: this.batchNum,\n            costHistory: this.costHistory,\n            epocNum: this.ni\n        });\n    }\n\n    drawLine(){\n        if(this.epocPost % 10 == 0) {\n            const lineData = this.getLineData();\n\n            postMessage({\n                action: 'DRAW_LINE',\n                lineData: lineData,\n                batchNum: this.batchNum,\n                epocNum: this.ni\n            });\n        }\n        this.epocPost++;\n    }\n\n    setup(){\n        /**\n         * Training examples is the [x, y] pairs that will be used for training\n         */\n        this.training_examples = this.measurements\n            .map((n, i) => {\n                return [i, n];\n            });\n        /**\n         * Number of iterations\n         * @type {number}\n         */\n        this.ni = 0;\n        /**\n         * Current Cost\n         * @type {number}\n         */\n        this.c = 0;\n        /**\n         * Alpha - Learning rate\n         * @type {number}\n         */\n        this.a = Regressor.LEARNING_RATE;\n        /**\n         * Best B - after convergence we choose the best B value\n         * @type {number}\n         */\n        this.bestB = 0;\n        /**\n         * Bese M - after convergence we choose the best M value\n         * @type {number}\n         */\n        this.bestM = 0;\n        /**\n         * Best Cost - keep track of the best cost we have reached so far\n         * @type {Number}\n         */\n        this.bestC = Infinity;\n        /**\n         * The slope\n         * @type {number}\n         */\n        this.m = 0;\n        /**\n         * The timer\n         * @type {null}\n         */\n        this.timer = null;\n        /**\n         * The HighCharts reference\n         * @type {Highcharts.Chart}\n         */\n        this.hc = null;\n        /**\n         * Previous cost, used for measuring precision\n         * @type {Number}\n         */\n        this.pc = Infinity;\n    }\n}\n\nexport default Regressor;\n\n\n// WEBPACK FOOTER //\n// ./src/linear_regression/bgdVsgd/Regressor.es6"],"sourceRoot":""}